{"version":3,"sources":["Formik/components/TextError.js","Formik/components/Input.js","Formik/components/RadioButton.js","Formik/components/Select.js","Formik/components/TextArea.js","Formik/components/Checkbox.js","Formik/components/DatePicker.js","Formik/components/CustomMultiSelect.js","Formik/components/MultiSelect.js","Formik/FormikControl.js","components/FormikContainer.js","App.js","index.js"],"names":["TextError","props","className","children","Input","label","name","rest","htmlFor","id","component","RadioButton","options","field","map","option","Fragment","key","type","value","checked","Select","as","TextArea","Checkbox","includes","DatePicker","form","setFieldValue","selected","onChange","val","CustomSelect","placeholder","isMulti","console","log","CustomMultiSelect","FormikControl","control","MultiSelect","FormikContainer","dropdownOptions","multiSelectDropdownOptions","radioOptions","checkboxOptions","validationSchema","Yup","email","required","description","selectOption","radioOption","checkboxOption","length","birthDate","nullable","multiSelectOption","min","initialValues","onSubmit","values","formik","JSON","stringify","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a565fcc6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TextError = (props) => {\n  return <div className=\"error\">{props.children}</div>;\n};\n\nexport default TextError;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"./TextError\";\n\nconst Input = (props) => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label htmlFor={name}>{label}</label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage name={name} component={TextError} />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"./TextError\";\n\nconst RadioButton = (props) => {\n  const { label, name, options, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label>{label}</label>\n      <Field name={name} {...rest}>\n        {({ field }) => {\n          // console.log('Field', field)\n          return options.map((option) => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type=\"radio\"\n                  id={option.value}\n                  {...field}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            );\n          });\n        }}\n      </Field>\n      <ErrorMessage name={name} component={TextError} />\n    </div>\n  );\n};\n\nexport default RadioButton;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"./TextError\";\n\nconst Select = (props) => {\n  const { label, name, options, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label htmlFor={name}>{label}</label>\n      <Field as=\"select\" id={name} name={name} {...rest}>\n        {options.map((option) => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          );\n        })}\n      </Field>\n      <ErrorMessage name={name} component={TextError} />\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"./TextError\";\n\nconst TextArea = (props) => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label htmlFor={name}>{label}</label>\n      <Field as=\"textarea\" id={name} name={name} />\n      <ErrorMessage name={name} component={TextError} />\n    </div>\n  );\n};\n\nexport default TextArea;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"./TextError\";\n\nconst Checkbox = (props) => {\n  const { label, name, options, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label>{label}</label>\n      <Field name={name} {...rest}>\n        {({ field }) => {\n          // console.log('Field', field)\n          return options.map((option) => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type=\"checkbox\"\n                  id={option.value}\n                  {...field}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            );\n          });\n        }}\n      </Field>\n      <ErrorMessage name={name} component={TextError} />\n    </div>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport TextError from \"./TextError\";\n\n// React Date Picker\nimport DateView from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DatePicker = (props) => {\n  const { label, name, ...rest } = props;\n  return (\n    <div className=\"form-control\">\n      <label htmlFor={name}>{label}</label>\n      <Field name={name}>\n        {({ form, field }) => {\n          const { setFieldValue } = form;\n          const { value } = field;\n          return (\n            <DateView\n              id={name}\n              {...field}\n              {...rest}\n              // required props for Dateview component below (from doc)\n              selected={value}\n              onChange={(val) => setFieldValue(name, val)}\n            />\n          );\n        }}\n      </Field>\n      <ErrorMessage name={name} component={TextError} />\n    </div>\n  );\n};\n\nexport default DatePicker;\n\n/*\nsetFieldValue --> allows you to programmaticaly set a field's value\n*/\n","import React from 'react';\nimport Select from 'react-select';\n\nexport const CustomSelect = ({ placeholder, field, form, options, isMulti = false }) => {\n  console.log('options', options);\n  console.log('field', field);\n  console.log('form', form);\n\n  const onChange = option => {\n    if (option) {\n      form.setFieldValue(field.name, option);\n    } else {\n      form.setFieldValue(field.name, []);\n    }\n  };\n\n  const getValue = () => {\n    if (options) {\n      return isMulti\n        ? options.filter(option => field.value.indexOf(option.value) >= 0)\n        : options.find(option => option.value === field.value);\n    } else {\n      return isMulti ? [] : '';\n    }\n  };\n\n  return (\n    <Select\n      name={field.name}\n      value={field.value['multiSelectOption']}\n      onChange={onChange}\n      placeholder={placeholder}\n      options={options}\n      isMulti={isMulti}\n    />\n  );\n};\n\nexport default CustomSelect;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport TextError from './TextError';\nimport CustomMultiSelect from './CustomMultiSelect';\n\nconst Select = props => {\n  const { label, name, options, ...rest } = props;\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field\n        id={name}\n        name={name}\n        options={options}\n        component={CustomMultiSelect}\n        placeholder='Select one or multiple options'\n        isMulti={true}\n        {...rest}\n      />\n      <ErrorMessage name={name} component={TextError} />\n    </div>\n  );\n};\n\nexport default Select;\n","import React from 'react';\nimport Input from './components/Input';\nimport RadioButton from './components/RadioButton';\nimport Select from './components/Select';\nimport TextArea from './components/TextArea';\nimport Checkbox from './components/Checkbox';\nimport DatePicker from './components/DatePicker';\nimport MultiSelect from './components/MultiSelect';\n\nconst FormikControl = props => {\n  const { control, ...rest } = props;\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />;\n    case 'textarea':\n      return <TextArea {...rest} />;\n    case 'select':\n      return <Select {...rest} />;\n    case 'radio':\n      return <RadioButton {...rest} />;\n    case 'checkbox':\n      return <Checkbox {...rest} />;\n    case 'date':\n      return <DatePicker {...rest} />;\n    case 'multi-select':\n      return <MultiSelect {...rest} />;\n    default:\n      return null;\n  }\n};\n\nexport default FormikControl;\n","// FormikContainer.js is used to test all re-usable components\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormikControl from '../Formik/FormikControl';\n\nconst FormikContainer = () => {\n  const dropdownOptions = [\n    { key: 'Select an option', value: 'placeholder' },\n    { key: 'Option 1', value: 'dOption1' },\n    { key: 'Option 2', value: 'dOption2' },\n    { key: 'Option 3', value: 'dOption3' },\n  ];\n  const multiSelectDropdownOptions = [\n    { label: 'Select an option', value: 'placeholder' },\n    { label: 'Option 1', value: 'dOption1' },\n    { label: 'Option 2', value: 'dOption2' },\n    { label: 'Option 3', value: 'dOption3' },\n  ];\n  const radioOptions = [\n    { key: 'Option 1', value: 'rOption1' },\n    { key: 'Option 2', value: 'rOption2' },\n    { key: 'Option 3', value: 'rOption3' },\n  ];\n  const checkboxOptions = [\n    { key: 'Option 1', value: 'cOption1' },\n    { key: 'Option 2', value: 'cOption2' },\n    { key: 'Option 3', value: 'cOption3' },\n  ];\n  const initialValues = {\n    email: '',\n    description: '',\n    selectOption: '',\n    radioOption: '',\n    checkboxOption: [],\n    birthDate: null,\n    multiSelectOption: [],\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().required('Required'),\n    description: Yup.string().required('Required'),\n    selectOption: Yup.string().required('Required'),\n    radioOption: Yup.string().required('Required'),\n    checkboxOption: Yup.array().length('1', 'Must check at least one').required('Required'),\n    birthDate: Yup.date().required('Required').nullable(),\n    multiSelectOption: Yup.array().min(3, 'Pick at least 3 tags').required('Required'),\n  });\n  const onSubmit = values => console.log('Form data', values);\n  return (\n    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n      {formik => (\n        <Form>\n          {/* Input  */}\n          <FormikControl control='input' type='email' label='Email' name='email' />\n          {/* TextArea */}\n          <FormikControl control='textarea' type='description' label='Description' name='description' />\n          {/* Select dropdown */}\n          <FormikControl control='select' label='Select a topic' name='selectOption' options={dropdownOptions} />\n          {/* Radio Button */}\n          <FormikControl control='radio' label='Radio Topic' name='radioOption' options={radioOptions} />\n          {/* Checkbox */}\n          <FormikControl control='checkbox' label='Checkbox topics' name='checkboxOption' options={checkboxOptions} />\n          {/* Date Picker */}\n          <FormikControl control='date' label='Pick a date' name='birthDate' />\n          {/* Multi-select */}\n          <FormikControl\n            control='multi-select'\n            label='Select multiple options'\n            name='multiSelectOption'\n            options={multiSelectDropdownOptions}\n          />\n          <button type='submit'> Submit </button>\n          {/* ========================================================= */}\n          <br />\n          <br />\n          {/* Preview Tag */}\n          Formik State\n          <pre>{JSON.stringify(formik, null, 2)}</pre>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default FormikContainer;\n\n/*\nFormikControl component decides which form field have to be rendered, based on 1 particular prop\n\n[Input.js] FormikControl - 33\n  Props\n    control=\"input\" --> required --> to know type of Formik control we need to render\n    label='Email' --> UI - required to label the form field\n    name='email' --> required by Formik, for the field and message component + formik state\n    type='email' --> can be email, text, or password (based on form field)\n\nSteps to create a reusable formik input component\n1) define Input formik control\n2) extract necessary props\n3) import that component into FormikControl.js as a switch case\n============================================================================\n[TextArea.js] FormikControl - 34\n    Props\n      control='textarea'\n      label='Description'\n      name='description'\n============================================================================\n[Select.js] FormikControl  - 35 (aka dropdown menu)\n    Props\n      control='select'  --> required, renders dropdown\n      label='Select a topic' --> label text for formf ield\n      name='selectOption' --> required for field and error msg compoennt\n      options=[{key, value}] --> required an array of objects to populate dropdown\n============================================================================\n[RadioButton.js] FormikControl  - 36 (Radio)\n  Props\n    control='radio'\n    label='Pick one option'\n    name='radioOption'\n    options=[{key, value}] --> options to click on\n============================================================================\n[Checkbox.js] FormikControl  - 37 (Checkbox Group)\n  Props\n    control='checkbox'\n    label='Pick options'\n    name='checkboxOptions'\n    options=[{key, value}]\n\n*/\n","import React from 'react';\nimport './styles.css';\nimport FormikContainer from './components/FormikContainer'; // Used to test all reusable components\n// import LoginForm from './components/LoginForm';\n// import RegistrationForm from './components/RegistrationForm';\n// import EnrollmentForm from './components/EnrollmentForm';\n\nexport default function App() {\n  return (\n    <div className='App'>\n      <FormikContainer />\n      {/* <LoginForm /> */}\n      {/* <RegistrationForm /> */}\n      {/* <EnrollmentForm /> */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}